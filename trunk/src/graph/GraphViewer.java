package graph;

import automata.Automata;
import automata.State;
import automata.Transition;
import edu.uci.ics.jung.algorithms.layout.FRLayout;
import edu.uci.ics.jung.algorithms.layout.Layout;
import edu.uci.ics.jung.algorithms.layout.util.Relaxer;
import edu.uci.ics.jung.graph.DirectedSparseMultigraph;
import edu.uci.ics.jung.graph.Graph;
import edu.uci.ics.jung.visualization.RenderContext;
import edu.uci.ics.jung.visualization.VisualizationViewer;
import edu.uci.ics.jung.visualization.control.DefaultModalGraphMouse;
import edu.uci.ics.jung.visualization.control.ModalGraphMouse;
import graph.transformers.StateLabeller;
import graph.transformers.StatePainter;
import graph.transformers.TransitionLabeller;
import java.awt.Dimension;

/**
 * Classe usada para desenhar os grafos na tela
 */
public class GraphViewer extends javax.swing.JFrame {

    /** Creates new form GraphViewer */
    public GraphViewer() {
        initComponents();
        // Centraliza a janela
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelGraph = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grafo");
        setPreferredSize(new java.awt.Dimension(800, 600));

        jPanelGraph.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelGraph, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelGraph, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void showAutomata(Automata automata) {
        // Cria um grafo direcional que permite múltiplas arestas
        final Graph<State, Transition> graph = new DirectedSparseMultigraph<State, Transition>();

        // Para cada estado do autômato
        for (State state : automata.getStates()) {
            // Adiciona um vértice
            graph.addVertex(state);
        }
        // Para cada transição do autômato
        for (Transition transition : automata.getTransitions()) {
            // Adiciona uma aresta
            graph.addEdge(transition, transition.getState1(), transition.getState2());
        }

        // Layout<V, E>
        Layout<State, Transition> layout = new FRLayout<State, Transition>(graph);
        layout.setSize(new Dimension(750, 550));

        // VisualizationComponent<V,E>
        final VisualizationViewer<State, Transition> vv = new VisualizationViewer<State, Transition>(layout);

        RenderContext<State, Transition> renderContext = vv.getRenderContext();

        // Distância entre o rótulo e as arestas
        renderContext.setLabelOffset(15);

        // Colore os vértices (inicial, final, ambos)
        renderContext.setVertexFillPaintTransformer(new StatePainter());

        // Mostra os rótulos dos vértices e arestas
        renderContext.setVertexLabelTransformer(new StateLabeller());
        renderContext.setEdgeLabelTransformer(new TransitionLabeller());

        // Create a graph mouse and add it to the visualization component
        DefaultModalGraphMouse gm = new DefaultModalGraphMouse();
        gm.setMode(ModalGraphMouse.Mode.TRANSFORMING);
        vv.setGraphMouse(gm);
        vv.setPreferredSize(new Dimension(800, 600));

        // Ajusta a posição dos vértices do grafo na tela
        Relaxer relaxer = vv.getModel().getRelaxer();
        if (relaxer != null) {
            relaxer.prerelax();
            relaxer.relax();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                GraphViewer graphFrame = new GraphViewer();
                graphFrame.jPanelGraph.add(vv);
                graphFrame.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanelGraph;
    // End of variables declaration//GEN-END:variables
}
